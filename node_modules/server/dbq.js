//dbq.js
"use strict";

var Client = require('mariasql');
var Deferred = require( "JQDeferred");
var _ = require('underscore');

var ABORT_MSG = "_ABORTED";

var c = null;

module.exports = {
    connect : function (con) {
        c = con;
    }
    , basicDbErr : function (obj, acc) {
        return obj
            .on('error', function (err) {
                if (acc && acc.length) {
                    acc.push({'_err': err});
                    dfd.resolve(acc);
                } else {
                    dfd.resolve({'_err': err});
                }
            })
            .on('abort', function () {
                dfd.resolve({'_err': ABORT_MSG});
            });
    }
    , createQ : function (table, keys) {

        // XXX err handle empty query
        var colStr = "(" + keys.join(',') + ")";
        var valStr = keys.length ? "( :" + keys.join(', :') + ")" : "()";

        return c.prepare("INSERT INTO " + table + colStr + " VALUES " + valStr);
    }
    , readAllQ : function (table, qkeys) {
        var qstring = "SELECT * FROM " + table;
        var qel = '';

        if (! _.isEmpty(qkeys)) {
            qstring += " WHERE ";
            qstring += _.reduce(qkeys, function (acc, qkey) {
                qel =  qkey + ' = :' + qkey;
                return acc? acc + ' AND ' + qel : qel;
            }, '');
        }
        return c.prepare(qstring + " LIMIT " + MAX_COUNT);
    }
    , readQ : function (table) {
        return c.prepare("SELECT * FROM " + table + " WHERE id = :id");
    }
    , updateQ : function (table, values) {
        var vals = _.reduce(_.keys(values), function (memo, el) {
            if (memo) {
                memo += ",";
            }
            return memo + el + " = :" + el;
        }, "");

        return c.prepare("UPDATE " + table + " SET " + vals + " WHERE id = :id");
    }

    ,  deleteQ : function (table) {
        return c.prepare("DELETE FROM " + table + " WHERE id = :id");
    }
}
